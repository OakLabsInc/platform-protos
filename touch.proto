syntax = "proto3";

import "google/protobuf/empty.proto";

package oak.platform;

// Configure human touch interfaces including IR and capacitive sensors
//
// 'touch_device_id' values come from serial numbers reported by the
// touch devices themselves.
service Touch {

  // Lists touch interfaces that can be configured
  rpc Info (google.protobuf.Empty) returns (TouchInformation) {}

  // Applies configuration to a touch interface
  rpc Configure (TouchConfigurationRequest) returns (TouchConfiguration) {}
}

message TouchInformation {
  repeated TouchDevice touch_devices = 1;
  message TouchDevice {
    string touch_device_id = 1;
    TouchConfiguration configuration = 2;
  }
}

message TouchConfigurationRequest {
  string touch_device_id = 1;
  TouchConfiguration configuration = 2;
}

message TouchConfiguration {

  // Four space-separated integers representing
  // <min-x max-x min-y max-y>
  // Use empty-string to use default calibration. Note that once
  // calibration is changed it can only be reset to default by
  // rebooting.
  // It is recommended that you start with extreme values,
  // such as "0 32768 0 32768", and then manually change values one
  // axis at a time until physical touches are aligned as desired.
  string calibration = 1;

  // Direction the plane of touch is oriented relative to the touch
  // interface's upright orientation. This is configured independently
  // of any display's orientation.
  // FORWARD_* means facing the user as a monitor normally does
  // BACKWARD_* means turned around (the X axis is reversed) before rotating
  // LEFT and RIGHT mean quarter turns relative to user's perspective
  Orientation orientation = 2;

  enum Orientation {
    FORWARD_UPRIGHT = 0;
    FORWARD_LEFT = 1;
    FORWARD_RIGHT = 2;
    FORWARD_INVERTED = 3;
    BACKWARD_UPRIGHT = 4;
    BACKWARD_LEFT = 5;
    BACKWARD_RIGHT = 6;
    BACKWARD_INVERTED = 7;
  }
}
