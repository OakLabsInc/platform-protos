syntax = "proto3";

import "google/protobuf/empty.proto";

package oak.platform;

service OakLights {
  /* Control an Oak USB Lighting Controller.

     The 'oak-lights' module must be activated before these RPCs are
     avaiable. */

  /* Lists controllers that are connected to the host */
  rpc Info (google.protobuf.Empty) returns (OakLightsInformation) {}
  /* Transitions the light color over a given amount of time. */
  rpc ChangeColor (ChangeColorRequest) returns (google.protobuf.Empty) {}
  /* Installs firmware on the controller */
  rpc FlashBoard (ControllerID) returns (google.protobuf.Empty) {}
}

message OakLightsInformation {
  repeated OakLights controllers = 1;
  message OakLights {
    string controller_id = 1;
  }
}

message ChangeColorRequest {
  string controller_id = 1;
  // The light color to transition to.
  // Note that neither red, green or blue values can be 0.
  // To make color as dim as possible, use 1.
  oneof color {
    Color rgb = 2;
    // 3 or 6 digits with leading '#', e.g. "#F00", '#A05020"
    // "#FFFF00" is invalid because 0 is not acceptable.
    string hex = 3;
  }
  // The brightness of the white lights at end of transition.
  // Must be between 1 and 255 inclusive.
  uint32 white = 4;
  // The time in miliseconds for the transition to take.
  // Must be positive. For fastest transition possible, use 1.
  uint32 duration = 5;

  message Color {
    // Each value must be between 1 and 255 inclusive.
    uint32 r = 1;
    uint32 g = 2;
    uint32 b = 3;
  }
}

message ControllerID {
  string controller_id = 1;
}
