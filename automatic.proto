syntax = "proto3";

import "google/protobuf/empty.proto";

import "audio.proto";
import "display.proto";
import "input.proto";

package oak.platform;

// Enables configuration when the Platform starts.
//
// This is used to make settings "permanent", such as ensuring the
// rotation of a monitor and input calibration after a reboot.
//
// Note that network connection settings are persisted
// independently. See `network.proto` for more details.
//
// When the Platform starts, the Apply RPC is called using the
// Configuration message that was previously passed to the Store
// RPC. It is also possible to manually use the Apply RPC at any
// other time. The automatic configuration is NOT applied every time
// an application starts. It is only after the Platform is
// restarted, which is normally only after a reboot.
//
// Requests in the fields of the stored Configuration message are
// sent, one at a time, in the order they are shown in the
// Configuration message definition below, to the appropriate RPCs
// of the services where those message types are defined.
//
// Instead of creating the Configuration message by hand, it is
// recommended that all of the configuration for each other service
// is prepared at once and then the Generate RPC is used to create a
// Configuration message that would match the prepared state. Then
// that message can be passed to the Store RPC. This is essentially
// a "Save Configuration" flow.
//
// If any errors are returned by RPCs to the Apply RPC, the error
// messages are collected and return as an error from the Apply RPC.
service Automatic {

  // Stores a Configuration for automatic application on start-up
  rpc Store (Configuration) returns (google.protobuf.Empty) {}

  // Exposes the currently stored Configuration
  rpc View (google.protobuf.Empty) returns (Configuration) {}

  // Erases the currently stored Configuration so that no automatic
  // configuration will be done on next Platform start-up.
  rpc Clear (google.protobuf.Empty) returns (google.protobuf.Empty) {}

  // Creates a Configuration message that, when sent to the Store RPC,
  // would lead to automatic configuration resulting in the same
  // settings that are in place when Generate was called
  rpc Generate (google.protobuf.Empty) returns (Configuration) {}

  // Uses the stored Configuration message to configure the
  // appropriate other services
  rpc Apply (google.protobuf.Empty) returns (google.protobuf.Empty) {}
}

// The Configuration message contains configuration request messages
// from other services. See the matching .proto files.
message Configuration {

  // Message to be sent to Audio.Configure RPC
  oak.platform.MultiAudioConfiguration audio = 1;

  // Message to be sent to Display.Configure RPC
  oak.platform.MultiDisplayConfiguration display = 2;

  // Message to be sent to Input.Configure RPC
  oak.platform.MultiInputConfiguration input = 3;
}
