syntax = "proto3";

import "google/protobuf/empty.proto";

package oak.platform;

// Configure human touch interfaces including IR and capacitive sensors
//
// 'touch_device_id' values come from serial numbers reported by the
// touch devices themselves.
service Touch {

  // Lists touch interfaces that can be configured
  rpc Info (google.protobuf.Empty) returns (TouchInformation) {}

  // Applies configuration to a touch interface
  rpc Configure (TouchConfigurationRequest) returns (TouchConfiguration) {}
}

message TouchInformation {
  repeated TouchDevice touch_devices = 1;
  message TouchDevice {
    string touch_device_id = 1;
    TouchConfiguration configuration = 2;
  }
}

message TouchConfigurationRequest {
  string touch_device_id = 1;
  TouchConfiguration configuration = 2;
}

message TouchConfiguration {

  // Four space-separated integers representing
  // <min-x max-x min-y max-y>
  // Use empty-string to use default calibration. Note that once
  // calibration is changed it can only be reset to default by
  // rebooting.
  // It is recommended that you start with extreme values,
  // such as "0 32768 0 32768", and then manually change values one
  // axis at a time until physical touches are aligned as desired.
  string calibration = 1;

  bool OBSOLETE_swap_axes = 2;

  // Rotate the interface relative to its physical upright direction
  // NOT relative to the current rotation or a display's image
  Rotate rotate = 3;
  enum Rotate {
    NO_ROTATE = 0;
    LEFT = 1;  // turn 90 degrees counter-clockwise
    RIGHT = 2;  // turn 90 degrees clockwise
    INVERTED = 3;  // turn 180 degrees
  }
}
