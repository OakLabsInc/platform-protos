syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

package oak.platform;

service Host {
  rpc Info (google.protobuf.Empty) returns (HostInformation) {}
  rpc ListModules (google.protobuf.Empty) returns (ModuleStatusList) {}
  rpc SetActiveModules (ModuleList) returns (google.protobuf.Empty) {}
  rpc Reboot (google.protobuf.Empty) returns (google.protobuf.Empty) {}
}

message HostInformation {
  string hostname = 1;
  google.protobuf.Timestamp time = 2;
  string timezone = 3;
}

message ModuleStatusList {
  repeated ModuleStatus modules = 1;
  message ModuleStatus {
    string module_id = 1;
    bool active = 2;
  }
}

message ModuleList {
  repeated string module_ids = 1;
}

service Application {
  rpc Status (google.protobuf.Empty) returns (ApplicationStatus) {}
  rpc Start (google.protobuf.Empty) returns (google.protobuf.Empty) {}
  rpc Stop (google.protobuf.Empty) returns (google.protobuf.Empty) {}
  rpc Install (ApplicationDefinition) returns (ApplicationSource) {}
  rpc ViewIdle (ApplicationDefinition) returns (ApplicationSource) {}
  rpc ViewLive (ApplicationDefinition) returns (ApplicationSource) {}
  rpc SwapIdleAndLive (google.protobuf.Empty) returns (google.protobuf.Empty) {}
  rpc FactoryReset (google.protobuf.Empty) returns (google.protobuf.Empty) {}
  rpc Logs (google.protobuf.Empty) returns (stream LogBatch) {}
}

message ApplicationStatus {
  bool running = 1;
  bool failed = 2;
  int64 since = 3;
}

message ApplicationDefinition {
  repeated DockerService services = 1;
  DockerAuth default_auth = 2;

  message DockerService {
    string image = 1;
    DockerAuth auth = 2;
  }
  message DockerAuth {
    string username = 1;
    string password = 2;
    string registry = 3;
  }
}

message ApplicationSource {
  string docker_compose_yaml = 1;
}

message LogBatch {
  message LogLine {
    string text = 1;
    google.protobuf.Timestamp timestamp = 2;
  }
  repeated LogLine loglines = 1;
}
